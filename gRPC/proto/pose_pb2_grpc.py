# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import pose_pb2 as pose__pb2


class ActionServerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.ActionStream = channel.unary_stream(
            '/pose.ActionServer/ActionStream',
            request_serializer=pose__pb2.Empty.SerializeToString,
            response_deserializer=pose__pb2.Action.FromString,
        )
        self.SendAction = channel.unary_unary(
            '/pose.ActionServer/SendAction',
            request_serializer=pose__pb2.Action.SerializeToString,
            response_deserializer=pose__pb2.Empty.FromString,
        )


class ActionServerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def ActionStream(self, request, context):
        """This bi-directional stream makes it possible to send and receive Actions between 2 persons
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendAction(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActionServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ActionStream': grpc.unary_stream_rpc_method_handler(
            servicer.ActionStream,
            request_deserializer=pose__pb2.Empty.FromString,
            response_serializer=pose__pb2.Action.SerializeToString,
        ),
        'SendAction': grpc.unary_unary_rpc_method_handler(
            servicer.SendAction,
            request_deserializer=pose__pb2.Action.FromString,
            response_serializer=pose__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'pose.ActionServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
